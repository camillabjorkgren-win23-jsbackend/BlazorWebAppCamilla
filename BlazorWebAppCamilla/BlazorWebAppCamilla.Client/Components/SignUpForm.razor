
@rendermode InteractiveAuto

<EditForm class="form" method="post" novalidate OnValidSubmit="SignUp">
    <div class="name">
        <div class="first-name">
            <div class="mb-3">
                <label class="form-label">First name</label>
                <span></span>
                <InputText class="form-control" @bind-value=@signupModel.FirstName />
            </div>
        </div>
        <div class="last-name">
            <div class="mb-3">
                <label class="form-label">Last name</label>
                <span></span>
                <InputText class="form-control" @bind-value=@signupModel.LastName />
            </div>
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <span></span>
        <InputText class="form-control" type="email" @bind-value=@signupModel.Email />
    </div>
    <div class="mb-3">
        <label class="form-label">Password</label>
        <span></span>
        <InputText class="form-control" type="password" @bind-value=@signupModel.Password />
    </div>
 @*    <div class="mb-3">
        <label class="form-label">Confirm Password</label>
        <span></span>
        <InputText class="form-control" type="password" @bind-value=@signupModel.ConfirmPassword />
    </div>
    <div class="mb-3 form-check">
        <InputCheckbox @bind-Value="@signupModel.AgreeToTerms" class="form-check-input" />
        <label class="form-check-label">I agree to the <NavLink href="/Terms">Terms & Conditions</NavLink> </label>
    </div> *@
    <button type="submit" class="btn-theme-s">Sign Up</button>
</EditForm>

@code {
    private SignUpModel signupModel = new SignUpModel();

    public class SignUpModel
    {
        public string FirstName { get; set; } = null!;
        public string LastName { get; set; } = null!;
        public string Email { get; set; } = null!;
        public string Password { get; set; } = null!;
    }


    private async Task SignUp()
    {
        // if (!signupModel.AgreeToTerms)
        // {
        //     // Handle the case where terms are not agreed
        //     return;
        // }


        // Prepare the request body
        var requestBody = JsonSerializer.Serialize(signupModel);

        // Create StringContent with JSON data
        var content = new StringContent(requestBody, Encoding.UTF8, "application/json");

        // Set the content type header
        content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
        using var http = new HttpClient();
        var response = await http.PostAsync("https://accountprovider-silicon-camilla.azurewebsites.net/api/SignUp?code=q4UCeYe88TX7T79nQHqcqLjzqwilYnhTjsEg7llzMYinAzFuuS76lw==", content);

        if (response.IsSuccessStatusCode)
        {
            // Handle success response
        }
        else
        {
            // Handle error response
        }
    }
}
